from typing import Self, Union, TypeVar


class Color:

    def __init__(self, text: str | Color) -> None:
        """
        """
        ...

    # styles

    def bold(self) -> Self: ...
    def dim(self) -> Self: ...
    def italic(self) -> Self: ...
    def underline(self) -> Self: ...
    def through(self) -> Self: ...
    def reverse(self) -> Self: ...
    def blink(self) -> Self: ...
    def blink_fast(self) -> Self: ...
    def hidden(self) -> Self: ...

    #region fg

    def black(self) -> Self: ...
    def red(self) -> Self: ...
    def green(self) -> Self: ...
    def yellow(self) -> Self: ...
    def blue(self) -> Self: ...
    def magenta(self) -> Self: ...
    def cyan(self) -> Self: ...
    def white(self) -> Self: ...
    def bright_black(self) -> Self: ...
    def bright_red(self) -> Self: ...
    def bright_green(self) -> Self: ...
    def bright_yellow(self) -> Self: ...
    def bright_blue(self) -> Self: ...
    def bright_magenta(self) -> Self: ...
    def bright_cyan(self) -> Self: ...
    def bright_white(self) -> Self: ...

    #region bg

    def bg_black(self) -> Self: ...
    def bg_red(self) -> Self: ...
    def bg_green(self) -> Self: ...
    def bg_yellow(self) -> Self: ...
    def bg_blue(self) -> Self: ...
    def bg_magenta(self) -> Self: ...
    def bg_cyan(self) -> Self: ...
    def bg_white(self) -> Self: ...
    def bg_bright_black(self) -> Self: ...
    def bg_bright_red(self) -> Self: ...
    def bg_bright_green(self) -> Self: ...
    def bg_bright_yellow(self) -> Self: ...
    def bg_bright_blue(self) -> Self: ...
    def bg_bright_magenta(self) -> Self: ...
    def bg_bright_cyan(self) -> Self: ...
    def bg_bright_white(self) -> Self: ...



_T = TypeVar("_T", bound="StaticColor")

class StaticColor:
    @staticmethod
    def bold(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def dim(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def italic(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def underline(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def through(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def reverse(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def blink(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def blink_fast(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def hidden(text: Union[str | Color]) -> Color: ...

    #region static fg

    @staticmethod
    def black(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def red(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def green(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def yellow(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def blue(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def magenta(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def cyan(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def white(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def bright_black(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def bright_red(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def bright_green(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def bright_yellow(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def bright_blue(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def bright_magenta(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def bright_cyan(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def bright_white(text: Union[str | Color]) -> Color: ...

    #region static bg

    @staticmethod
    def bg_black(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def bg_red(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def bg_green(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def bg_yellow(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def bg_blue(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def bg_magenta(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def bg_cyan(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def bg_white(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def bg_bright_black(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def bg_bright_red(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def bg_bright_green(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def bg_bright_yellow(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def bg_bright_blue(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def bg_bright_magenta(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def bg_bright_cyan(text: Union[str | Color]) -> Color: ...
    @staticmethod
    def bg_bright_white(text: Union[str | Color]) -> Color: ...
